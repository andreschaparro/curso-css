body {
    background-color: black;
    color: white;
}

img {
    position: absolute;
    top: 0;
}

/* La siguiente línea crea una regla keyframes llamada imagen */
@keyframes imagen {
    from {
        /* Estado inicial de las propiedades*/
        opacity: 1;
    }

    to {
        /* Estado final de las propiedades */
        opacity: 0.5;
    }
}

/* El problema es que una vez finalizada la animación se vuelve instantáneamente al estado inicial, aunque el cursor siga sobre la imagen */
/* Este caso es mejor resolverlo con transiciones */
img:hover {
    /* El atributo animation debe tener como valor el nombre de la regla keyframe */
    animation: imagen;
    /* La siguiente línea determina cuanto tiempo se tarda en modificar las propiedades */
    animation-duration: 2s;
}

@keyframes cuadrado {

    /* En este caso no usamos from y to */
    /* Definimos varios estados para las propiedades de modo de crear una línea de tiempo */
    0% {
        background-color: red;
        left: 0;
        top: 0;
    }

    25% {
        background-color: blue;
        left: 200px;
        top: 0;
    }

    50% {
        background-color: green;
        left: 200px;
        top: 200px;
    }

    75% {
        background-color: yellow;
        left: 0;
        top: 200px;
    }

    100% {
        background-color: red;
        left: 0;
        top: 0;
    }
}

div.cuadradito {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    animation: cuadrado;
    animation-duration: 5s;
    /* La siguiente línea permite repetir indefinidamente la animación */
    animation-iteration-count: infinite;
    /* La siguiente línea determina como se procesa la animación */
    animation-timing-function: ease-in-out;
    /* La siguiente línea permite demorar el inicio de la animación */
    animation-delay: 2s;
    /* La siguiente línea permite alternar la forma en que se recorre la línea de tiempo */
    animation-direction: alternate;
}

@keyframes linea {
    from {
        background-color: red;
        left: 0;
    }

    to {
        background-color: blue;
        left: 200px;
    }
}

div.cuadradito1 {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    /* animation: name duration timing-function delay iteration-count direction */
    animation: linea 2s ease-in-out 0s infinite alternate;
}

div.cuadradito2 {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    animation: linea 2s ease-in 0s infinite alternate;
}

div.cuadradito3 {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    animation: linea 2s ease-out 0s infinite alternate;
}

div.cuadradito4 {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    animation: linea 2s linear 0s infinite alternate;
}

div.cuadradito5 {
    border: 2px solid black;
    width: 100px;
    height: 100px;
    position: relative;
    animation: linea 2s ease 0s infinite alternate;
}